package com.bankteller.customer;

import com.bankteller.index.Login;
import com.bankteller.admin.queue.QueueManager;
import javax.swing.*;
import java.awt.GridLayout;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Map;

public class CustomerKiosk extends javax.swing.JFrame {
    /**
     * Creates new form CustomerKiosk
     */
    public CustomerKiosk() {
        initComponents();
        
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlKiosk = new javax.swing.JPanel();
        lblKiosk = new javax.swing.JLabel();
        btnDeposit = new javax.swing.JButton();
        btnWithdrawal = new javax.swing.JButton();
        btnLoan = new javax.swing.JButton();
        btnBills = new javax.swing.JButton();
        btnOpening = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblKiosk.setFont(new java.awt.Font("Yu Gothic", 0, 24)); // NOI18N
        lblKiosk.setText("CUSTOMER KIOSK");

        btnDeposit.setFont(new java.awt.Font("Yu Gothic", 0, 18)); // NOI18N
        btnDeposit.setText("Deposit");
        btnDeposit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDepositActionPerformed(evt);
            }
        });

        btnWithdrawal.setFont(new java.awt.Font("Yu Gothic", 0, 18)); // NOI18N
        btnWithdrawal.setText("Withdrawal");
        btnWithdrawal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnWithdrawalActionPerformed(evt);
            }
        });

        btnLoan.setFont(new java.awt.Font("Yu Gothic", 0, 18)); // NOI18N
        btnLoan.setText("Loan Inquiry");
        btnLoan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoanActionPerformed(evt);
            }
        });

        btnBills.setFont(new java.awt.Font("Yu Gothic", 0, 18)); // NOI18N
        btnBills.setText("Bills Payment");
        btnBills.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBillsActionPerformed(evt);
            }
        });

        btnOpening.setFont(new java.awt.Font("Yu Gothic", 0, 18)); // NOI18N
        btnOpening.setText("Account Opening");
        btnOpening.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOpeningActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlKioskLayout = new javax.swing.GroupLayout(pnlKiosk);
        pnlKiosk.setLayout(pnlKioskLayout);
        pnlKioskLayout.setHorizontalGroup(
            pnlKioskLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlKioskLayout.createSequentialGroup()
                .addGroup(pnlKioskLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlKioskLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnDeposit, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnBills, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlKioskLayout.createSequentialGroup()
                        .addGap(135, 135, 135)
                        .addComponent(lblKiosk))
                    .addGroup(pnlKioskLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnWithdrawal, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlKioskLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnLoan, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnOpening, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlKioskLayout.setVerticalGroup(
            pnlKioskLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlKioskLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(lblKiosk)
                .addGap(18, 18, 18)
                .addGroup(pnlKioskLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDeposit, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBills, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnWithdrawal, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlKioskLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnLoan, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnOpening, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlKiosk, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlKiosk, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private static final Map<String, Boolean> emergencyReasons = new LinkedHashMap<>();
    static {
        emergencyReasons.put("None of the above", false);
        emergencyReasons.put("Pregnant", true);
        emergencyReasons.put("Person with Disability (PWD)", true);
        emergencyReasons.put("Senior Citizen", true);
        emergencyReasons.put("Health Emergency", true);
        emergencyReasons.put("Military / Frontliner", true);
    }
    
    private static final Map<Integer, String> serviceNames = new HashMap<>();
        static {
            serviceNames.put(1, "Deposit");
            serviceNames.put(2, "Withdrawal");
            serviceNames.put(3, "Loan Inquiry");
            serviceNames.put(4, "Account Opening");
            serviceNames.put(5, "Bills Payment");
        }


    private void enqueueTransaction(int serviceId, int tellerId) {
        QueueManager qm = new QueueManager();

        JTextField nameField = new JTextField();
        JTextField accNumField = new JTextField();

        String[] priorityOptions = emergencyReasons.keySet().toArray(new String[0]);
        JComboBox<String> priorityDropdown = new JComboBox<>(priorityOptions);

        JPanel panel = new JPanel(new GridLayout(0, 1));
        panel.add(new JLabel("Customer Name:"));
        panel.add(nameField);
        panel.add(new JLabel("Account Number:"));
        panel.add(accNumField);
        panel.add(new JLabel("Priority Reason (if any):"));
        panel.add(priorityDropdown);

        int result = JOptionPane.showConfirmDialog(null, panel, "Queue a Transaction", JOptionPane.OK_CANCEL_OPTION);
        if (result != JOptionPane.OK_OPTION) return;

        String name = nameField.getText().trim();
        String accNumText = accNumField.getText().trim();
        String selectedReason = (String) priorityDropdown.getSelectedItem();

        if (name.isEmpty() || accNumText.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please fill in all fields.", "Input Error", JOptionPane.WARNING_MESSAGE);
            return;
        }

        int accNum;
        try {
            accNum = Integer.parseInt(accNumText);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Invalid account number format.", "Input Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        String serviceName = serviceNames.getOrDefault(serviceId, "Unknown");
        boolean isEmergency = emergencyReasons.getOrDefault(selectedReason, false);

        // Tell QueueManager to enqueue and return the queue number if successful
        int queueNumber = qm.enqueue(accNum, tellerId, serviceId, name, isEmergency); 

        if (queueNumber <= 0) {
            JOptionPane.showMessageDialog(this, "Failed to enqueue transaction.\nPlease check the account number or try again.", "Enqueue Failed", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Token format: E/A + 3-digit number
        String token = (isEmergency ? "E" : "A") + String.format("%03d", queueNumber);

        JOptionPane.showMessageDialog(this,
            "<html><b>Transaction Queued!</b><br/>" +
            "Name: <b>" + name + "</b><br/>" +
            "Service: <b>" + serviceName + "</b><br/>" +
            "Token Number: <b>" + token + "</b><br/>" +
            "Emergency: <b>" + (isEmergency ? "Yes" : "No") + "</b></html>",
            "Success",
            JOptionPane.INFORMATION_MESSAGE
        );

        this.dispose();
        new Login().setVisible(true);
    }

    private void btnWithdrawalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnWithdrawalActionPerformed
        // TODO add your handling code here:
        enqueueTransaction(2, 3);
    }//GEN-LAST:event_btnWithdrawalActionPerformed

    private void btnDepositActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDepositActionPerformed
        // TODO add your handling code here:
        enqueueTransaction(1, 1);
    }//GEN-LAST:event_btnDepositActionPerformed

    private void btnBillsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBillsActionPerformed
        // TODO add your handling code here:
        enqueueTransaction(5, 2);
    }//GEN-LAST:event_btnBillsActionPerformed

    private void btnLoanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoanActionPerformed
        // TODO add your handling code here:
        enqueueTransaction(3, 4);
    }//GEN-LAST:event_btnLoanActionPerformed

    private void btnOpeningActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOpeningActionPerformed
        // TODO add your handling code here:
        enqueueTransaction(4, 5);
    }//GEN-LAST:event_btnOpeningActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CustomerKiosk.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CustomerKiosk.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CustomerKiosk.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CustomerKiosk.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CustomerKiosk().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBills;
    private javax.swing.JButton btnDeposit;
    private javax.swing.JButton btnLoan;
    private javax.swing.JButton btnOpening;
    private javax.swing.JButton btnWithdrawal;
    private javax.swing.JLabel lblKiosk;
    private javax.swing.JPanel pnlKiosk;
    // End of variables declaration//GEN-END:variables
}
